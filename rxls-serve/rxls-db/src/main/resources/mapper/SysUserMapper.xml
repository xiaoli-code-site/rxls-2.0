<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.rx.db.mapper.SysUserMapper">

    <resultMap type="cn.rx.common.vo.admin.sysUser.SysUserVO" id="UserMap">
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="openid" column="openid" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="born" column="born" jdbcType="TIMESTAMP"/>

        <collection property="roles" ofType="cn.rx.common.vo.admin.sysRole.SysRoleVO">
                <result property="roleId" column="role_id" jdbcType="INTEGER"/>
                <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
                <result property="roleValue" column="role_value" jdbcType="INTEGER"/>
                <result property="state" column="state" jdbcType="INTEGER"/>
        </collection>
    </resultMap>

    <!--    根据微信唯一标识查询用户信息-->
    <select id="selectByOpenid" resultType="cn.rx.common.vo.admin.sysUser.SysUserVO">
        select u.user_id,
               u.phone,
               u.phone,
               u.avatar,
               u.nickname,
               u.state,
               u.sex,
               u.born,
               u.create_time,
               group_concat(distinct  r.role_name separator ',') as roleName
        from sys_user u
                 join sys_role_user ru
                      on u.user_id = ru.user_id
                 join sys_role r on ru.role_id = r.role_id
        where u.openid = #{openid}
          and u.deleted = 0
    </select>

    <!--    根据id查询用户信息-->
    <select id="selectUserById" resultType="cn.rx.common.vo.admin.sysUser.SysUserVO" resultMap="UserMap">
        select u.user_id,
               u.phone,
               u.born,
               u.avatar,
               u.nickname,
               u.create_time,
               u.update_time,
               u.state,
               u.sex,
               r.role_id,
               r.role_value,
               r.role_name,
               r.state,
               r.create_time,
               r.update_time
        from sys_user u
                 join sys_role_user ru
                      on u.user_id = ru.user_id
                 join sys_role r on ru.role_id = r.role_id
        where u.user_id = #{uid}
          and u.deleted = 0
    </select>

    <!--    分页查询用户信息-->
    <select id="selectPageWithRoles" resultType="cn.rx.common.vo.admin.sysUser.SysUserVO" resultMap="UserMap">
        select u.user_id,
        u.phone,
        u.avatar,
        u.born,
        u.nickname,
        u.create_time,
        u.update_time,
        u.state,
        u.sex,
        r.role_id,
        r.role_value,
        r.role_name
        from sys_user u
        join sys_role_user ru on u.user_id = ru.user_id
        join sys_role r on ru.role_id = r.role_id
        where
        r.role_value &lt; 100 and u.deleted = 0 and r.deleted = 0
        <if test="user.phone != null">
            and u.phone like concat('%',#{user.phone},'%')
        </if>
        <if test="user.sex != null">
            and u.sex = #{user.sex}
        </if>
        <if test="user.state != null">
            and u.state = #{user.state}
        </if>
        <if test="user.nickname != null">
            and u.nickname like concat('%',#{user.nickname},'%')
        </if>
        <if test="roleId != null">
            and ru.role_id = #{roleId}
        </if>
        order by u.update_time desc
        limit #{page},#{size}
    </select>

    <!--    分页查询总数-->
    <select id="countPageWithRoles" resultType="java.lang.Long">
        select
        count(u.user_id)
        from sys_user u
        join sys_role_user ru on u.user_id = ru.user_id
        join sys_role r on ru.role_id = r.role_id
        where
        r.role_value &lt; 100 and u.deleted = 0
        <if test="user.phone != null">
            and u.phone like concat('%',#{user.phone},'%')
        </if>
        <if test="user.sex != null">
            and u.sex = #{user.sex}
        </if>
        <if test="user.state != null">
            and u.state = #{user.state}
        </if>
        <if test="user.nickname != null">
            and u.nickname like concat('%',#{user.nickname},'%')
        </if>
        <if test="roleId != null">
            and r.role_id = #{roleId}
        </if>
    </select>


    <!--    根据用户id查询用户信息-->
    <select id="selectInIds" resultType="cn.rx.common.vo.admin.sysUser.SysUserVO" resultMap="UserMap">
        select u.user_id,
        u.phone,
        u.avatar,
        u.nickname,
        u.born,
        u.create_time,
        u.update_time,
        u.state,
        u.sex,
        r.role_id,
        r.role_value,
        r.role_name
        from sys_user u
        join sys_role_user ru on u.user_id = ru.user_id
        join sys_role r on ru.role_id = r.role_id
        where
        u.deleted = 0 and
        u.user_id in
        <foreach item="id" index="index" collection="ids"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
        order by u.update_time desc
    </select>

    <!--    根据id,权限值查询-->
    <select id="selectByUserRole" resultType="cn.rx.db.entity.SysUser">
        select u.user_id
        from sys_user u
                 join sys_role_user ru on u.user_id = ru.user_id
                 join sys_role r on ru.role_id = r.role_id
        where u.user_id = #{id}
          and u.deleted = 0
          and r.role_value >= #{value}
        group by u.user_id
    </select>


    <!--    用户统计-->
    <select id="statistics" resultType="java.lang.Integer">
        select count(distinct u.user_id)
        from sys_user u
                 join sys_role_user ru on u.user_id = ru.user_id
                 join sys_role r on ru.role_id = r.role_id
        where r.role_value &lt; 100
          and u.deleted = 0
    </select>
</mapper>

